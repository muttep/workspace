
// interchange nibbles in the byte
char a=11110000b;
     a=00001111
char r=0000 0000b;

r1=(a&0xF0)>> 4; 1111 0000
r2=(a&0x0F)<<4;
r1=r1|r2;

------------
// count the repeted number. in optimized way
int arr[]={2,3,3,5,3,4,1,7};
int arr[]={2,3,3,5,3,5,5,5};
int arr[]={2,3,3,5,3,5,5,2};
int arr[]={0,0,0,0,0,0,0,0};
int n=8;	// non of elements
int k=8;	// max number available in the array

int  count1=0;
int repNum=0;
int repNum1=0;

for(int i=0;i<n;i++) {
	num=arr[i];
	count=0;
	repNum=0;
	for(int j=1;j<n;j++) {
		if(num==arr[j]) {
			++count;
			repNum=num;
		}
	}
	if(count>count1) {
		count1=count;
		repNum1=repNum;
	}
}

-----------
ndd executable

------
